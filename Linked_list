#include<stdio.h>
#include<stdlib.h>
#include<string.h>

typedef struct ListNode{
	char data[10];
	struct ListNode* link;
}listNode;

typedef struct{
	struct listNode* head;
}linkedList_h;

linkedList_h* createLinkedList_h(void);
void freeLinkdeList_h(linkedList_h*);
void addLastNode(linkedList_h*, char*);
void reverse(linkedList_h*);
void deleteLastNode(linkedList_h*);
void printList(linkedList_h*);

linkedList_h* createLinkedList_h(void){
	linkedList_h* L;
	L =(linkedList_h*)malloc(sizeof(linkedList_h));
	L->head = NULL;
	return L;
}

void addLastNode(linkedList_h* L,char* x){
	listNode* newNode;
	listNode* p;
	newNode =(listNode*)malloc(sizeof(listNode));
	strcpy(newNode->data, x);
	newNode->link=NULL;
	if(L->head==NULL){
		L->head=newNode;
		return;
	}
	p=L->head;
	while(p->link !=NULL) p = p->link;
	p->link=newNode;
	
}

void printList(linkedList_h* L){
	listNode* p;
	printf("L = (");
	p=L->head;
	while(p != NULL){
		printf("%s",p->data);
		p=p->link;
		if(p!=NULL)printf(",");
	}
	printf(") \n");
}

int main(){
	linkedList_h* L;
	L= createLinkedList_h();
	printf("(1) 공백리스트 생성하기!\n");
	printList(L); getchar();
	
	printf("(2) 리스트에 3개의 노드 추가하기! \n");
	addLastNode(L,"월");
	addLastNode(L,"수");
	addLastNode(L,"금");
	printList(L); getchar(); 
	
	printf("(3) 리스트 마지막에 노드 한개 추가하기! \n");
	addLastNode(L,"일");
	printList(L); getchar(); 
}

